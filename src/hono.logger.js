var l=/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;var a=t=>{let n=t.match(l);return n?n[5]:""};var b=(t,n)=>{let o=n||{},r=o.delimiter||",",e=o.separator||".";return t=t.toString().split("."),t[0]=t[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1"+r),t.join(e)},u=t=>{let n=Date.now()-t;return b([n<1e4?n+"ms":Math.round(n/1e3)+"s"])},c={Outgoing:"-->",Incoming:"<--",Error:"xxx"},$=(t=0)=>({7:`\x1B[35m${t}\x1B[0m`,5:`\x1B[31m${t}\x1B[0m`,4:`\x1B[33m${t}\x1B[0m`,3:`\x1B[36m${t}\x1B[0m`,2:`\x1B[32m${t}\x1B[0m`,1:`\x1B[32m${t}\x1B[0m`,0:`\x1B[33m${t}\x1B[0m`})[t/100|0];function m(t,n,o,r,e,i,s){let g=n===c.Incoming?`  ${n} ${o} ${r}`:`  ${n} ${o} ${r} ${$(e)} ${i} ${s}`;t(g)}var d=(t=console.log)=>async(n,o)=>{let{method:r}=n.req,e=a(n.req.url);m(t,c.Incoming,r,e);let i=Date.now();try{await o()}catch(x){throw m(t,c.Error,r,e,n.res.status||500,u(i)),x}let s=parseFloat(n.res.headers.get("Content-Length")),g=isNaN(s)?"0":s<1024?`${s}b`:`${s/1024}kB`;m(t,c.Outgoing,r,e,n.res.status,u(i),g)};export{d as logger};
